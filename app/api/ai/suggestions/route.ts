import { NextResponse } from 'next/server'

export async function POST(req: Request) {
  try {
    const { balance, username, gender, language } = await req.json()

    const politeName = username || 'Sir'
    const userGender = gender || 'unspecified'
    const userLang = language === 'hi' ? 'hi' : 'en'

    const systemPrompt =
      userLang === 'hi'
        ? `
‡§Ü‡§™ FinBot ‡§π‡•à‡§Ç ‚Äî ‡§è‡§ï ‡§¨‡•Å‡§¶‡•ç‡§ß‡§ø‡§Æ‡§æ‡§® ‡§î‡§∞ ‡§µ‡§ø‡§®‡§Æ‡•ç‡§∞ ‡§µ‡§ø‡§§‡•ç‡§§‡•Ä‡§Ø ‡§∏‡§π‡§æ‡§Ø‡§ï‡•§ ‡§â‡§™‡§Ø‡•ã‡§ó‡§ï‡§∞‡•ç‡§§‡§æ ‡§ï‡•ã ‡§â‡§®‡§ï‡•á ‡§®‡§æ‡§Æ (‚Äú${politeName}‚Äù) ‡§∏‡•á ‡§∏‡§Ç‡§¨‡•ã‡§ß‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç‡•§ 
‡§â‡§®‡§ï‡•Ä ‡§∂‡•á‡§∑ ‡§∞‡§æ‡§∂‡§ø ‡§î‡§∞ ‡§≤‡§ø‡§Ç‡§ó ‡§ï‡•á ‡§Ü‡§ß‡§æ‡§∞ ‡§™‡§∞ ‡§µ‡•ç‡§Ø‡§ï‡•ç‡§§‡§ø‡§ó‡§§ ‡§∏‡•Å‡§ù‡§æ‡§µ ‡§¶‡•á‡§Ç ‚Äî ‡§∏‡§∏‡•ç‡§§‡•á ‡§∏‡§æ‡§Æ‡§æ‡§® ‡§ï‡•Ä ‡§Ö‡§®‡•Å‡§∂‡§Ç‡§∏‡§æ ‡§® ‡§ï‡§∞‡•á‡§Ç ‡§ú‡§¨ ‡§§‡§ï ‡§ï‡§ø ‡§Ø‡§π ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï ‡§® ‡§π‡•ã‡•§

‡§Ü‡§™‡§ï‡•ã ‡§¨‡§§‡§æ‡§®‡§æ ‡§π‡•à:
- 2 ‡§ö‡•Ä‡§ú‡•á‡§Ç ‡§ú‡•ã ‡§µ‡•á ‡§è‡§ï‡§Æ‡•Å‡§∂‡•ç‡§§ ‡§ñ‡§∞‡•Ä‡§¶ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç
- 2 ‡§ö‡•Ä‡§ú‡•á‡§Ç EMI ‡§™‡§∞ ‡§≤‡•á ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç
- ‡§è‡§ï EMI ‡§¨‡•ç‡§∞‡•á‡§ï‡§°‡§æ‡§â‡§® ‡§â‡§¶‡§æ‡§π‡§∞‡§£
- ‡§è‡§ï ‡§õ‡•ã‡§ü‡§æ ‡§µ‡•ç‡§Ø‡§æ‡§µ‡§π‡§æ‡§∞‡§ø‡§ï ‡§µ‡§ø‡§§‡•ç‡§§‡•Ä‡§Ø ‡§∏‡•Å‡§ù‡§æ‡§µ

‚ö†Ô∏è ‡§ï‡•É‡§™‡§Ø‡§æ ‡§â‡§§‡•ç‡§§‡§∞ ‡§ï‡•á‡§µ‡§≤ ‡§π‡§ø‡§Ç‡§¶‡•Ä ‡§Æ‡•á‡§Ç ‡§¶‡•á‡§Ç‡•§ ‡§®‡§∞‡§Æ ‡§≠‡§æ‡§∑‡§æ ‡§ï‡§æ ‡§™‡•ç‡§∞‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§ 150 ‡§∂‡§¨‡•ç‡§¶‡•ã‡§Ç ‡§∏‡•á ‡§ï‡§Æ ‡§Æ‡•á‡§Ç‡•§
‡§≤‡§ø‡§Ç‡§ó: ${userGender}
`.trim()
        : `
You are FinBot ‚Äî a friendly, intelligent financial assistant. Address the user respectfully using their name (e.g. "${politeName}"). 
Give realistic, gender-aware suggestions based on the user's balance. Recommend useful purchases (gadgets, fashion, fitness, home, etc.) ‚Äî avoid cheap or irrelevant items.

Include:
- 2 items they can buy one-time
- 2 items they can take on EMI
- 1 EMI breakdown example
- 1 short practical financial tip

‚ö†Ô∏è Please reply only in English. Stay under 150 words. Be warm, respectful, and helpful.
Gender: ${userGender}
`.trim()

    const userPrompt =
      userLang === 'hi'
        ? `
‡§®‡§Æ‡§∏‡•ç‡§§‡•á, ‡§Æ‡•á‡§∞‡§æ ‡§®‡§æ‡§Æ ${politeName} ‡§π‡•à‡•§ ‡§Æ‡•á‡§∞‡•á ‡§™‡§æ‡§∏ ‚Çπ${balance} ‡§¨‡§ö‡•á ‡§π‡•à‡§Ç‡•§ ‡§ï‡•É‡§™‡§Ø‡§æ ‡§Æ‡•á‡§∞‡•Ä ‡§∏‡•ç‡§•‡§ø‡§§‡§ø ‡§ï‡•á ‡§Ö‡§®‡•Å‡§∏‡§æ‡§∞ ‡§∏‡•Å‡§ù‡§æ‡§µ ‡§¶‡•á‡§Ç:
- 2 ‡§ö‡•Ä‡§ú‡•á‡§Ç ‡§ú‡•ã ‡§Æ‡•à‡§Ç ‡§è‡§ï‡§Æ‡•Å‡§∂‡•ç‡§§ ‡§ñ‡§∞‡•Ä‡§¶ ‡§∏‡§ï‡§§‡§æ ‡§π‡•Ç‡§Å?
- 2 ‡§ö‡•Ä‡§ú‡•á‡§Ç EMI ‡§™‡§∞ ‡§≤‡•á ‡§∏‡§ï‡§§‡§æ ‡§π‡•Ç‡§Å?
- ‡§è‡§ï EMI ‡§â‡§¶‡§æ‡§π‡§∞‡§£
- ‡§è‡§ï ‡§µ‡§ø‡§§‡•ç‡§§‡•Ä‡§Ø ‡§∏‡•Å‡§ù‡§æ‡§µ ‡§≠‡•Ä ‡§ú‡•ã‡§°‡§º‡•á‡§Ç‡•§
`.trim()
        : `
Hi, my name is ${politeName}. I currently have ‚Çπ${balance} left. Please give suggestions for:
- 2 items I can buy one-time
- 2 items on EMI
- An EMI breakdown
- 1 useful financial tip
`.trim()

    const response = await fetch(process.env.GROQ_API_URL!, {
      method: 'POST',
      headers: {
        Authorization: `Bearer ${process.env.GROQ_API_KEY}`,
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        model: process.env.GROQ_MODEL || 'llama3-8b-8192',
        messages: [
          { role: 'system', content: systemPrompt },
          { role: 'user', content: userPrompt },
        ],
        temperature: 0.6,
      }),
    })

    const data = await response.json()
    const answer = data?.choices?.[0]?.message?.content?.trim()

    if (!answer) {
      return NextResponse.json({
        answer: `${politeName}, FinBot couldn‚Äôt generate suggestions right now.`,
      })
    }

    return NextResponse.json({ answer })
  } catch (err) {
    console.error('üî• AI Suggestion Error:', err)
    return NextResponse.json({ error: 'FinBot crashed on server.' }, { status: 500 })
  }
}
